const gcodeDescriptions = {
  G0: "Szybki ruch bez ciƒôcia",
  G1: "Ruch roboczy ‚Äì ciƒôcie z okre≈õlonƒÖ prƒôdko≈õciƒÖ",
  G2: "Ruch po ≈Çuku zgodnie z ruchem wskaz√≥wek",
  G3: "Ruch po ≈Çuku przeciwnie do ruchu wskaz√≥wek",
  G4: "Zatrzymanie (czasowe)",
  G10: "Ustawienie warto≈õci narzƒôdzia lub uk≈Çadu wsp√≥≈Çrzƒôdnych",
  G17: "Wyb√≥r p≈Çaszczyzny XY",
  G18: "Wyb√≥r p≈Çaszczyzny XZ",
  G19: "Wyb√≥r p≈Çaszczyzny YZ",
  G20: "Jednostki w calach",
  G21: "Jednostki w milimetrach",
  G28: "Powr√≥t do punktu odniesienia",
  G30: "Drugi punkt odniesienia",
  G40: "Anuluj kompensacjƒô promienia narzƒôdzia",
  G41: "Kompensacja promienia ‚Äì lewa strona",
  G42: "Kompensacja promienia ‚Äì prawa strona",
  G43: "Kompensacja d≈Çugo≈õci narzƒôdzia (dodatnia)",
  G49: "Anuluj kompensacjƒô d≈Çugo≈õci",
  G53: "Ruch w uk≈Çadzie maszynowym",
  G54: "Uk≈Çad wsp√≥≈Çrzƒôdnych 1",
  G55: "Uk≈Çad wsp√≥≈Çrzƒôdnych 2",
  G56: "Uk≈Çad wsp√≥≈Çrzƒôdnych 3",
  G57: "Uk≈Çad wsp√≥≈Çrzƒôdnych 4",
  G58: "Uk≈Çad wsp√≥≈Çrzƒôdnych 5",
  G59: "Uk≈Çad wsp√≥≈Çrzƒôdnych 6",
  G80: "Anuluj cykl wiercenia",
  G81: "Cykl wiercenia",
  G82: "Cykl wiercenia z zatrzymaniem",
  G83: "Wiercenie g≈Çƒôbokie (peck drilling)",
  G84: "Gwintowanie",
  G90: "Pozycjonowanie absolutne",
  G91: "Pozycjonowanie przyrostowe",
  G92: "Ustaw aktualnƒÖ pozycjƒô jako zadanƒÖ",
  G94: "Prƒôdko≈õƒá posuwu w mm/min",
  G95: "Prƒôdko≈õƒá posuwu na obr√≥t wrzeciona",
  G98: "Powr√≥t do punktu poczƒÖtkowego po cyklu",
  G99: "Powr√≥t do punktu R po cyklu",
  M0: "Zatrzymanie programu ‚Äì pauza",
  M1: "Zatrzymanie warunkowe (opcjonalne)",
  M2: "Koniec programu (Fanuc)",
  M3: "W≈ÇƒÖcz wrzeciono zgodnie z ruchem wskaz√≥wek",
  M4: "W≈ÇƒÖcz wrzeciono przeciwnie do ruchu wskaz√≥wek",
  M5: "Wy≈ÇƒÖcz wrzeciono",
  M6: "Zmiana narzƒôdzia",
  M8: "W≈ÇƒÖcz ch≈Çodziwo",
  M9: "Wy≈ÇƒÖcz ch≈Çodziwo",
  M19: "Pozycjonowanie wrzecona",
  M30: "Koniec programu i przewiniƒôcie",
  M98: "Wywo≈Çanie podprogramu",
  M99: "Powr√≥t z podprogramu / pƒôtla"
};


function interpretGcode() {
  const input = document.getElementById("gcode-input").value;
  const lines = input.split("\n");
  let output = "";

  lines.forEach((line, index) => {
    const original = line.trim();
    if (!original) return;

    const words = original.split(" ");
    let explanation = `<div><strong>üîπ Linia ${index + 1}:</strong> <code>${original}</code><br/>`;

    words.forEach(word => {
      const code = word.toUpperCase().match(/^([A-Z]+)([0-9]+)$/);
      if (code) {
        const command = code[1] + code[2];
        if (gcodeDescriptions[command]) {
          explanation += `<span class="cmd" title="${gcodeDescriptions[command]}">${command}</span>: <span class="desc">${gcodeDescriptions[command]}</span><br/>`;
        } else {
          explanation += `<span class="cmd unknown">${command}</span>: <span class="desc">‚ùì Nieznana komenda</span><br/>`;
        }
      }
    });

    explanation += `</div><br/>`;
    output += explanation;
  });

  document.getElementById("output").innerHTML = output;
}



function toggleDarkMode() {
  const body = document.body;
  body.classList.toggle('dark');

  // Zapamiƒôtaj preferencjƒô
  if (body.classList.contains('dark')) {
    localStorage.setItem('darkMode', 'true');
  } else {
    localStorage.setItem('darkMode', 'false');
  }
}

// Za≈Çaduj tryb ciemny przy starcie, je≈õli by≈Ç zapamiƒôtany
window.addEventListener('DOMContentLoaded', () => {
  const darkModeEnabled = localStorage.getItem('darkMode') === 'true';
  if (darkModeEnabled) {
    document.body.classList.add('dark');
  }
});
